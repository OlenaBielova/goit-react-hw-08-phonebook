{"version":3,"file":"static/js/147.c3473569.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/Form.styled.js","components/ContactForm/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","views/ContactsView.js"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const NewContactForm = styled(Form)`\n  // margin-right: auto;\n  // margin-left: auto;\n  width: 350px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: bold;\n  color: rgb(7, 132, 249);\n`;\n\nexport const NameInput = styled(Field)`\n  min-width: 155px;\n  margin-left: 32px;\n  margin-bottom: 10px;\n  height: 30px;\n  font-size: 16px;\n`;\n\nexport const NumberInput = styled(Field)`\n  min-width: 155px;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  height: 30px;\n  font-size: 16px;\n`;\n\nexport const AddBtn = styled.button`\n  width: 80px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: bold;\n  background-color: white;\n  outline: 1px solid rgb(7, 132, 249);\n  color: rgb(7, 132, 249);\n  border: none;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: rgb(7, 132, 249);\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nexport const Error = styled.span`\n  margin-left: 10px;\n  font-size: 16px;\n  color: red;\n  font-weight: normal;\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  Wrapper,\n  NewContactForm,\n  NameInput,\n  NumberInput,\n  AddBtn,\n  Error,\n} from './Form.styled';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (item, { resetForm }) => {\n    const normalizedName = item.name.toLowerCase();\n    const repeatedNameList = contacts.items.filter(\n      item => item.name.toLowerCase() === normalizedName\n    );\n\n    if (repeatedNameList.length === 0) {\n      dispatch(addContact(item));\n      resetForm();\n      return;\n    }\n    alert(`${item.name} is already in contacts`);\n  };\n\n  return (\n    <Wrapper>\n      <h3>Add New</h3>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <NewContactForm autoComplete=\"off\">\n          <label>\n            {' '}\n            Name{' '}\n            <NameInput\n              type=\"text\"\n              placeholder=\"Mia Fiona\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <Error>\n              <ErrorMessage name=\"name\" />\n            </Error>\n          </label>\n          <br />\n          <label>\n            {' '}\n            Number{' '}\n            <NumberInput\n              type=\"tel\"\n              placeholder=\"+38011 111 11 11\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <Error>\n              <ErrorMessage name=\"number\" />\n            </Error>\n          </label>\n          <br />\n          <AddBtn type=\"submit\">Add</AddBtn>\n        </NewContactForm>\n      </Formik>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SearchByName = styled.label`\n  font-size: 16px;\n  font-weight: bold;\n  color: rgb(7, 132, 249);\n`;\n\nexport const SearchInput = styled.input`\nmin-width: 155px;\nmargin-top: 7px;\nmargin-right: auto;\nmargin-left: auto;\nheight: 30px;\nfont-size: 16px;\n}\n`;\n","import React from 'react';\nimport { SearchByName, SearchInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <SearchByName>\n      Find contact by name\n      <br />\n      <SearchInput\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        name=\"filter\"\n      />\n    </SearchByName>\n  );\n};\n","import styled from 'styled-components';\nimport { TiDelete } from 'react-icons/ti';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  min-width: 350px;\n`;\n\nexport const List = styled.ul`\n  padding: 0 !important;\n  list-style-type: circle;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  list-style: none;\n  padding: 0 !important;\n  font-size: 20px;\n  font-weight: normal;\n  gap: 20px;\n  line-height: 0;\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 35px;\n  background: transparent;\n  border: none !important;\n  border-radius: 50%;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const DeleteIcon = styled(TiDelete)`\n  margin-top: auto;\n  margin-bottom: auto;\n  background-color: transparent;\n  color: rgb(7, 132, 249);x \n  border: none;\n  border-radius: 50%;\n\n  &:hover {\n    background-color: red;\n    color: white;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { Filter } from '../Filter/Filter';\nimport {\n  Wrapper,\n  List,\n  Contact,\n  DeleteBtn,\n  DeleteIcon,\n} from './ContactList.styled';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n  const filter = useSelector(selectFilter);\n\n  const { items, isLoading, error } = contacts;\n\n  const filteredContacts = items.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <Wrapper>\n      <h3>My contacts</h3>\n      <Filter />\n      <List>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {filteredContacts.map(({ name, number, id }) => (\n          <Contact key={id}>\n            <DeleteBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <DeleteIcon size={25} />\n            </DeleteBtn>\n            <p>\n              {name} : {number}\n            </p>\n          </Contact>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/Form';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nconst ContactView = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactView;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","Wrapper","styled","NewContactForm","Form","NameInput","Field","NumberInput","AddBtn","Error","ContactForm","dispatch","useDispatch","useSelector","initialValues","name","number","onSubmit","item","resetForm","normalizedName","toLowerCase","repeatedNameList","items","length","addContact","alert","autoComplete","type","placeholder","pattern","title","required","SearchByName","SearchInput","Filter","value","onChange","e","changeFilter","target","List","Contact","DeleteBtn","DeleteIcon","TiDelete","ContactList","useEffect","fetchContacts","console","log","isLoading","error","filteredContacts","includes","map","id","onClick","deleteContact","size"],"sourceRoot":""}